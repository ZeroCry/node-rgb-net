<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGB.NET.Core</name>
    </assembly>
    <members>
        <member name="T:RGB.NET.Core.AbstractBrush">
            <inheritdoc cref="T:RGB.NET.Core.AbstractDecoratable`1" />
            <inheritdoc cref="T:RGB.NET.Core.IBrush" />
            <summary>
            Represents a basic brush.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.BrushCalculationMode">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.Brightness">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.Opacity">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.ColorCorrections">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.RenderedRectangle">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractBrush.RenderedTargets">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractBrush"/> class.
            </summary>
            <param name="brightness">The overall percentage brightness of the brush. (default: 1.0)</param>
            <param name="opacity">The overall percentage opacity of the brush. (default: 1.0)</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.PerformRender(RGB.NET.Core.Rectangle,System.Collections.Generic.IEnumerable{RGB.NET.Core.BrushRenderTarget})">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.ApplyDecorators(RGB.NET.Core.Rectangle,RGB.NET.Core.BrushRenderTarget,RGB.NET.Core.Color)">
            <summary>
            Applies all attached and enabled decorators to the brush.
            </summary>
            <param name="rectangle">The rectangle in which the brush should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the color should be taken.</param>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to be modified.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.PerformFinalize">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.GetColorAtPoint(RGB.NET.Core.Rectangle,RGB.NET.Core.BrushRenderTarget)">
            <summary>
            Gets the color at an specific point assuming the brush is drawn into the given rectangle.
            </summary>
            <param name="rectangle">The rectangle in which the brush should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the color should be taken.</param>
            <returns>The color at the specified point.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBrush.FinalizeColor(RGB.NET.Core.Color)">
            <summary>
            Finalizes the color by appliing the overall brightness and opacity.<br/>
            This method should always be the last call of a <see cref="M:RGB.NET.Core.AbstractBrush.GetColorAtPoint(RGB.NET.Core.Rectangle,RGB.NET.Core.BrushRenderTarget)" /> implementation.
            </summary>
            <param name="color">The color to finalize.</param>
            <returns>The finalized color.</returns>
        </member>
        <member name="T:RGB.NET.Core.BrushCalculationMode">
            <summary>
            Contains a list of all brush calculation modes.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.BrushCalculationMode.Relative">
            <summary>
            The calculation <see cref="T:RGB.NET.Core.Rectangle"/> for <see cref="T:RGB.NET.Core.IBrush"/> will be the rectangle around the <see cref="T:RGB.NET.Core.ILedGroup"/> the <see cref="T:RGB.NET.Core.IBrush"/> is applied to.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.BrushCalculationMode.Absolute">
            <summary>
            The calculation <see cref="T:RGB.NET.Core.Rectangle"/> for <see cref="T:RGB.NET.Core.IBrush"/> will always be the rectangle completly containing all affected <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.BrushRenderTarget">
            <summary>
            Represents a single target of a brush render.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.BrushRenderTarget.Led">
            <summary>
            Gets the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.BrushRenderTarget.Rectangle">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Rectangle"/> representing the area to render the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.BrushRenderTarget.Point">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Point"/> representing the position to render the target-<see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.BrushRenderTarget.#ctor(RGB.NET.Core.Led,RGB.NET.Core.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.BrushRenderTarget"/> class.
            </summary>
            <param name="led">The target-<see cref="T:RGB.NET.Core.Led"/>.</param>
            <param name="rectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> representing the area to render the target-<see cref="T:RGB.NET.Core.Led"/>.</param>
        </member>
        <member name="T:RGB.NET.Core.IBrush">
            <summary>
            Represents a basic brush.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.IsEnabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.IBrush"/> is enabled and will be drawn on an update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.BrushCalculationMode">
            <summary>
            Gets or sets the calculation mode used for the rectangle/points used for color-selection in brushes.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.Brightness">
            <summary>
            Gets or sets the overall percentage brightness of the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.Opacity">
            <summary>
            Gets or sets the overall percentage opacity of the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.ColorCorrections">
            <summary>
            Gets a list of <see cref="T:RGB.NET.Core.IColorCorrection"/> used to correct the colors of the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.RenderedRectangle">
            <summary>
            Gets the <see cref="P:RGB.NET.Core.IBrush.RenderedRectangle"/> used in the last render pass.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IBrush.RenderedTargets">
            <summary>
            Gets a dictionary containing all <see cref="T:RGB.NET.Core.Color"/> for <see cref="T:RGB.NET.Core.BrushRenderTarget"/> calculated in the last render pass.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IBrush.PerformRender(RGB.NET.Core.Rectangle,System.Collections.Generic.IEnumerable{RGB.NET.Core.BrushRenderTarget})">
            <summary>
            Performs the render pass of the <see cref="T:RGB.NET.Core.IBrush"/> and calculates the raw <see cref="T:RGB.NET.Core.Color"/> for all requested <see cref="T:RGB.NET.Core.BrushRenderTarget"/>.
            </summary>
            <param name="rectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> in which the brush should be drawn.</param>
            <param name="renderTargets">The <see cref="T:RGB.NET.Core.BrushRenderTarget"/> (keys/points) of which the color should be calculated.</param>
        </member>
        <member name="M:RGB.NET.Core.IBrush.PerformFinalize">
            <summary>
            Performs the finalize pass of the <see cref="T:RGB.NET.Core.IBrush"/> and calculates the final <see cref="P:RGB.NET.Core.IBrush.ColorCorrections"/> for all previously calculated <see cref="T:RGB.NET.Core.BrushRenderTarget"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IColorCorrection">
            <summary>
            Represents a generic color-correction.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IColorCorrection.ApplyTo(RGB.NET.Core.Color)">
            <summary>
            Applies the <see cref="T:RGB.NET.Core.IColorCorrection"/> to the given <see cref="T:RGB.NET.Core.Color"/>. 
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to correct.</param>
        </member>
        <member name="T:RGB.NET.Core.AbstractDecoratable`1">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IDecoratable`1" />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecoratable`1.Decorators">
            <summary>
            Gets a readonly-list of all <see cref="T:RGB.NET.Core.IDecorator"/> attached to this <see cref="T:RGB.NET.Core.IDecoratable`1"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.AddDecorator(`0)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.RemoveDecorator(`0)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecoratable`1.RemoveAllDecorators">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.AbstractDecorator">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IDecorator" />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.Order">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractDecorator.DecoratedObjects">
            <summary>
            Gets a readonly-list of all <see cref="T:RGB.NET.Core.IDecoratable"/> this decorator is attached to.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractDecorator.Detach``2">
            <summary>
            Detaches the decorator from all <see cref="T:RGB.NET.Core.IDecoratable"/> it is currently attached to.
            </summary>
            <typeparam name="TDecoratable">The type of the <see cref="T:RGB.NET.Core.IDecoratable"/> this decorator is attached to.</typeparam>
            <typeparam name="TDecorator">The type of this <see cref="T:RGB.NET.Core.IDecorator"/>.</typeparam>
        </member>
        <member name="T:RGB.NET.Core.AbstractUpdateAwareDecorator">
            <inheritdoc />
            <summary>
            Represents a basic decorator which is aware of the <see cref="E:RGB.NET.Core.RGBSurface.Updating" /> event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractUpdateAwareDecorator.UpdateIfDisabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> should call <see cref="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)"/> even if the Decorator is disabled.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> class.
            </summary>
            <param name="updateIfDisabled">Bool indicating if the <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/> should call <see cref="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)"/> even if the Decorator is disabled.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractUpdateAwareDecorator.Update(System.Double)">
            <summary>
            Updates this <see cref="T:RGB.NET.Core.AbstractUpdateAwareDecorator"/>.
            </summary>
            <param name="deltaTime">The elapsed time (in seconds) since the last update.</param>
        </member>
        <member name="T:RGB.NET.Core.IBrushDecorator">
            <inheritdoc />
            <summary>
            Represents a <see cref="T:RGB.NET.Core.IDecorator" /> decorating a <see cref="T:RGB.NET.Core.IBrush" />.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IBrushDecorator.ManipulateColor(RGB.NET.Core.Rectangle,RGB.NET.Core.BrushRenderTarget,RGB.NET.Core.Color)">
            <summary>
            Decorator-Method called by the <see cref="T:RGB.NET.Core.IBrush"/>.
            </summary>
            <param name="rectangle">The rectangle in which the <see cref="T:RGB.NET.Core.IBrush"/> should be drawn.</param>
            <param name="renderTarget">The target (key/point) from which the <see cref="T:RGB.NET.Core.Color"/> should be taken.</param>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to be modified.</param>
        </member>
        <member name="T:RGB.NET.Core.IDecoratable">
            <summary>
            Represents a basic decoratable.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IDecoratable`1">
            <inheritdoc />
            <summary>
            Represents a basic decoratable for a specific type of <see cref="T:RGB.NET.Core.IDecorator" />
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.AddDecorator(`0)">
            <summary>
            Adds an <see cref="T:RGB.NET.Core.IDecorator"/> to the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
            <param name="decorator">The <see cref="T:RGB.NET.Core.IDecorator"/> to be added.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.RemoveDecorator(`0)">
            <summary>
            Removes an <see cref="T:RGB.NET.Core.IDecorator"/> from the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
            <param name="decorator">The <see cref="T:RGB.NET.Core.IDecorator"/> to be removed.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecoratable`1.RemoveAllDecorators">
            <summary>
            Removes all <see cref="T:RGB.NET.Core.IDecorator"/> from the <see cref="T:RGB.NET.Core.IDecoratable"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IDecorator">
            <summary>
            Represents a basic decorator.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IDecorator.IsEnabled">
            <summary>
            Gets or sets if the <see cref="T:RGB.NET.Core.IDecorator"/> is enabled and will be used.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IDecorator.Order">
            <summary>
            Gets or sets the order in which multiple decorators should be applied on the same object.
            Higher orders are processed first.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IDecorator.OnAttached(RGB.NET.Core.IDecoratable)">
            <summary>
            Attaches this <see cref="T:RGB.NET.Core.IDecorator"/> to the given target.
            </summary>
            <param name="decoratable">The object this <see cref="T:RGB.NET.Core.IDecorator"/> should be attached to.</param>
        </member>
        <member name="M:RGB.NET.Core.IDecorator.OnDetached(RGB.NET.Core.IDecoratable)">
            <summary>
            Detaches this <see cref="T:RGB.NET.Core.IDecorator"/> from the given target.
            </summary>
            <param name="decoratable">The object this <see cref="T:RGB.NET.Core.IDecorator"/> should be detached from.</param>
        </member>
        <member name="T:RGB.NET.Core.ILedGroupDecorator">
            <inheritdoc />
            <summary>
            Represents a basic decorator decorating a <see cref="T:RGB.NET.Core.ILedGroup" />.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.AbstractRGBDevice`1">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:RGB.NET.Core.IRGBDevice`1" />
            <summary>
            Represents a generic RGB-device
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.DeviceInfo">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#DeviceInfo">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.Size">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.Location">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RequiresFlush">
            <summary>
            Gets or sets if the device needs to be flushed on every update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.UpdateMode">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.LedMapping">
            <summary>
            Gets a dictionary containing all <see cref="T:RGB.NET.Core.Led"/> of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.SpecialDeviceParts">
            <summary>
            Gets a dictionary containing all <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> associated with this <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.LedId)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.Point)">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractRGBDevice`1.RGB#NET#Core#IRGBDevice#Item(RGB.NET.Core.Rectangle,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.Update(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.SyncBack">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.DeviceUpdate">
            <summary>
            Performs device specific updates.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.UpdateLeds(System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <summary>
            Sends all the updated <see cref="T:RGB.NET.Core.Led"/> to the device.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.InitializeLed(RGB.NET.Core.LedId,RGB.NET.Core.Rectangle)">
            <summary>
            Initializes the <see cref="T:RGB.NET.Core.Led"/> with the specified id.
            </summary>
            <param name="ledId">The <see cref="T:RGB.NET.Core.LedId"/> to initialize.</param>
            <param name="ledRectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> representing the position of the <see cref="T:RGB.NET.Core.Led"/> to initialize.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.ApplyLayoutFromFile(System.String,System.String,System.Boolean)">
            <summary>
            Applies the given layout.
            </summary>
            <param name="layoutPath">The file containing the layout.</param>
            <param name="imageLayout">The name of the layout used to get the images of the leds.</param>
            <param name="createMissingLeds">If set to true a new led is initialized for every id in the layout if it doesn't already exist.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.CreateLedCustomData(RGB.NET.Core.LedId)">
            <summary>
            Creates provider-specific data associated with this <see cref="T:RGB.NET.Core.LedId"/>.
            </summary>
            <param name="ledId">The <see cref="T:RGB.NET.Core.LedId"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.AddSpecialDevicePart``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetSpecialDevicePart``1">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.GetEnumerator">
            <inheritdoc />
            <summary>
            Returns an enumerator that iterates over all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
            <returns>An enumerator for all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractRGBDevice`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
            <summary>
            Returns an enumerator that iterates over all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
            <returns>An enumerator for all <see cref="T:RGB.NET.Core.Led" /> of the <see cref="T:RGB.NET.Core.IRGBDevice" />.</returns>
        </member>
        <member name="T:RGB.NET.Core.DeviceUpdateMode">
            <summary>
            Contains a list of different device device update modes.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.DeviceUpdateMode.None">
            <summary>
            Represents nothing.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.DeviceUpdateMode.Sync">
            <summary>
            Represents a mode which updates the leds of the device.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.DeviceUpdateMode.SyncBack">
            <summary>
            Represents a mode which reads the color of the leds of the device.
            This isn't supported by all devices!
            </summary>
        </member>
        <member name="F:RGB.NET.Core.DeviceUpdateMode.NoUpdate">
            <summary>
            Represents all update modes.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDevice">
            <inheritdoc cref="T:System.Collections.Generic.IEnumerable`1" />
            <inheritdoc cref="T:RGB.NET.Core.IBindable" />
            <inheritdoc cref="T:System.IDisposable" />
            <summary>
            Represents a generic RGB-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.DeviceInfo">
            <summary>
            Gets generic information about the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Location">
            <summary>
            Gets or sets the location of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Size">
            <summary>
            Gets a copy of the <see cref="P:RGB.NET.Core.IRGBDevice.Size"/> of the whole <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.UpdateMode">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.DeviceUpdateMode"/> of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.LedId)">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Led"/> with the specified <see cref="T:RGB.NET.Core.LedId"/>.
            </summary>
            <param name="ledId">The <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led"/> to get.</param>
            <returns>The <see cref="T:RGB.NET.Core.Led"/> with the specified <see cref="T:RGB.NET.Core.LedId"/> or null if no <see cref="T:RGB.NET.Core.Led"/> is found.</returns>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.Point)">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.Led" /> at the given physical location.
            </summary>
            <param name="location">The <see cref="T:RGB.NET.Core.Point"/> to get the location from.</param>
            <returns>The <see cref="T:RGB.NET.Core.Led"/> at the given <see cref="T:RGB.NET.Core.Point"/> or null if no location is found.</returns>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice.Item(RGB.NET.Core.Rectangle,System.Double)">
            <summary>
            Gets a list of <see cref="T:RGB.NET.Core.Led" /> inside the given <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="referenceRect">The <see cref="T:RGB.NET.Core.Rectangle"/> to check.</param>
            <param name="minOverlayPercentage">The minimal percentage overlay a <see cref="T:RGB.NET.Core.Led"/> must have with the <see cref="T:RGB.NET.Core.Rectangle" /> to be taken into the list.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.Update(System.Boolean)">
            <summary>
            Perform an update for all dirty <see cref="T:RGB.NET.Core.Led"/>, or all <see cref="T:RGB.NET.Core.Led"/> if flushLeds is set to true.
            </summary>
            <param name="flushLeds">Specifies whether all <see cref="T:RGB.NET.Core.Led"/> (including clean ones) should be updated.</param>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.SyncBack">
            <summary>
            Synchronizes the internal state of the device to the real (physical) state.
            This isn't supported by all devices! Check <see cref="P:RGB.NET.Core.IRGBDeviceInfo.SupportsSyncBack"/> to see if it's supported or not.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.AddSpecialDevicePart``1(``0)">
            <summary>
            Adds the given <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> to the device.
            This will override existing <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> of the same type.
            </summary>
            <param name="specialDevicePart">The <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> to add.</param>
            <typeparam name="T">The generic typeof of the <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> to add.</typeparam>
        </member>
        <member name="M:RGB.NET.Core.IRGBDevice.GetSpecialDevicePart``1">
            <summary>
            Gets the requested <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> if available on this <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
            <typeparam name="T">The generic type of the requested <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/>.</typeparam>
            <returns>The requested <see cref="T:RGB.NET.Core.IRGBDeviceSpecialPart"/> or null if not available in this <see cref="T:RGB.NET.Core.IRGBDevice"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.IRGBDevice`1">
            <inheritdoc />
            <summary>
            Represents a generic RGB-device with an known device-info type.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDevice`1.DeviceInfo">
            <summary>
            Gets generic information about the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceInfo">
            <summary>
            Represents a generic information for a <see cref="T:RGB.NET.Core.IRGBDevice"/>
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.DeviceType">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Manufacturer">
            <summary>
            Gets the manufacturer-name of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Model">
            <summary>
            Gets the model-name of the <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Lighting">
            <summary>
            Gets the lighting capability of the <see cref="T:RGB.NET.Core.IRGBDevice"/>
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.SupportsSyncBack">
            <summary>
            Gets a bool indicating, if the <see cref="T:RGB.NET.Core.IRGBDevice"/> supports SynBacks or not.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceInfo.Image">
            <summary>
            Gets the URI of an image of the <see cref="T:RGB.NET.Core.IRGBDevice"/> or null if there is no image.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceProvider">
            <summary>
            Represents a generic device provider.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.IsInitialized">
            <summary>
            Indicates if the used SDK is initialized and ready to use.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.Devices">
            <summary>
            Gets a list of <see cref="T:RGB.NET.Core.IRGBDevice"/> loaded by this <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProvider.HasExclusiveAccess">
            <summary>
            Gets whether the application has exclusive access to devices or not.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IRGBDeviceProvider.Initialize(RGB.NET.Core.RGBDeviceType,System.Boolean,System.Boolean)">
            <summary>
            Initializes the <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/> if not already happened or reloads it if it is already initialized.
            </summary>
            <param name="loadFilter">Specifies which types of devices to load.</param>
            <param name="exclusiveAccessIfPossible">Specifies whether the application should request exclusive access of possible or not.</param>
            <param name="throwExceptions">Specifies whether exception during the initialization sequence should be thrown or not.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.IRGBDeviceProvider.ResetDevices">
            <summary>
            Resets all handled <see cref="T:RGB.NET.Core.IRGBDevice"/> back top default.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceProviderLoader`1">
            <summary>
            Represents a generic device provider loaded used to dynamically load devices into an application.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:RGB.NET.Core.IRGBDeviceProviderLoader`1.RequiresInitialization">
            <summary>
            Indicates if the returned device-provider needs some specific initialization before use.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.IRGBDeviceProviderLoader`1.GetDeviceProvider">
            <summary>
            Gets the device-provider.
            </summary>
            <returns>The device-provider.</returns>
        </member>
        <member name="T:RGB.NET.Core.IRGBDeviceSpecialPart">
            <inheritdoc />
            <summary>
            Represents a special part of a <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Layout.DeviceLayout">
            <summary>
            Represents the serializable layout of a <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Name">
            <summary>
            Gets or sets the name of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Description">
            <summary>
            Gets or sets the description of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Type">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Lighting">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.RGBDeviceLighting"/> of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Vendor">
            <summary>
            Gets or sets the vendor of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Model">
            <summary>
            Gets or sets the model of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Shape">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.Shape"/> of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Width">
            <summary>
            Gets or sets the width of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Height">
            <summary>
            Gets or sets the height of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.LedUnitWidth">
            <summary>
            Gets or sets the width of one 'unit' used for the calculation of led positions and sizes.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.LedUnitHeight">
            <summary>
            Gets or sets the height of one 'unit' used for the calculation of led positions and sizes.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.ImageBasePath">
            <summary>
            The path images for this device are collected in.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.DeviceImage">
            <summary>
            The image file for this device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.Leds">
            <summary>
            Gets or sets a list of <see cref="T:RGB.NET.Core.Layout.LedLayout"/> representing all the <see cref="T:RGB.NET.Core.Led"/> of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.DeviceLayout.LedImageLayouts">
            <summary>
            Gets or sets a list of <see cref="T:RGB.NET.Core.Layout.LedImageLayout"/> representing the layouts for the images of all the <see cref="T:RGB.NET.Core.Led"/> of the <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Layout.DeviceLayout.Load(System.String)">
            <summary>
            Creates a new <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/> from the given xml.
            </summary>
            <param name="path">The path to the xml file.</param>
            <returns>The deserialized <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.Layout.LedImage">
            <summary>
            Represents the serializable image-data of a specific <see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedImage.Id">
            <summary>
            Gets or sets the Id of the <see cref="T:RGB.NET.Core.Layout.LedImage"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedImage.Image">
            <summary>
            Gets or sets the image of the <see cref="T:RGB.NET.Core.Layout.LedImage"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Layout.LedImageLayout">
            <summary>
            Represents the serializable collection of <see cref="T:RGB.NET.Core.Layout.LedImage"/> for a specific layout.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedImageLayout.Layout">
            <summary>
            Gets or sets the layout of the <see cref="T:RGB.NET.Core.Layout.LedImage"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedImageLayout.LedImages">
            <summary>
            Gets or sets a list of <see cref="T:RGB.NET.Core.Layout.LedImage"/> representing the images of all the <see cref="T:RGB.NET.Core.Led"/> of the represented layout.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Layout.LedLayout">
            <summary>
            Represents the serializable layout of a <see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.Id">
            <summary>
            Gets or sets the Id of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.DescriptiveShape">
            <summary>
            Gets or sets the descriptive <see cref="T:RGB.NET.Core.Shape"/> of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            This property is for XML-serialization only and should not be directly accessed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.DescriptiveX">
            <summary>
            Gets or sets the descriptive x-position of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            This property is for XML-serialization only and should not be directly accessed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.DescriptiveY">
            <summary>
            Gets or sets the descriptive y-position of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            This property is for XML-serialization only and should not be directly accessed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.DescriptiveWidth">
            <summary>
            Gets or sets the descriptive width of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            This property is for XML-serialization only and should not be directly accessed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.DescriptiveHeight">
            <summary>
            Gets or sets the descriptive height of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            This property is for XML-serialization only and should not be directly accessed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.Shape">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.Shape"/> of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.ShapeData">
            <summary>
            Gets or sets the vecor-data representing a custom-shape of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.X">
            <summary>
            Gets or sets the x-position of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.Y">
            <summary>
            Gets or sets the y-position of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.Width">
            <summary>
            Gets or sets the width of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Layout.LedLayout.Height">
            <summary>
            Gets or sets the height of the <see cref="T:RGB.NET.Core.Layout.LedLayout"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Layout.LedLayout.CalculateValues(RGB.NET.Core.Layout.DeviceLayout,RGB.NET.Core.Layout.LedLayout)">
            <summary>
            Calculates the position- and size-data from the respective descriptive values.
            </summary>
            <param name="device">The <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/> this <see cref="T:RGB.NET.Core.Layout.LedLayout"/> belongs to.</param>
            <param name="lastLed">The <see cref="T:RGB.NET.Core.Layout.LedLayout"/> previously calculated.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBDeviceLighting">
            <summary>
            Contains a list of different lightning-modes used by <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceLighting.None">
            <summary>
            The <see cref="T:RGB.NET.Core.IRGBDevice"/> doesn't support lighting,
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceLighting.Key">
            <summary>
            The <see cref="T:RGB.NET.Core.IRGBDevice"/> supports per-key-lightning.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceLighting.Device">
            <summary>
            The <see cref="T:RGB.NET.Core.IRGBDevice"/> supports per-device-lightning.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.RGBDeviceType">
            <summary>
            Contains a list of different types of device.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.None">
            <summary>
            Represents nothing.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Unknown">
            <summary>
            Represents a device where the type is not known or not present in the list.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Keyboard">
            <summary>
            Represents a keyboard.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mouse">
            <summary>
            Represents a mouse.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Headset">
            <summary>
            Represents a headset.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mousepad">
            <summary>
            Represents a mousepad.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.LedStripe">
            <summary>
            Represents a LED-stipe.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.LedMatrix">
            <summary>
            Represents a LED-matrix.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Mainboard">
            <summary>
            Represents a Mainboard.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.GraphicsCard">
            <summary>
            Represents a Graphics card.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.DRAM">
            <summary>
            Represents a DRAM-bank.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.HeadsetStand">
            <summary>
            Represents a headset stand.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.Keypad">
            <summary>
            Represents a keypad.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.RGBDeviceType.All">
            <summary>
            Represents all devices.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.UpdateQueue.#ctor(RGB.NET.Core.IUpdateTrigger)">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.UpdateTrigger.Starting">
            <inheritdoc />
        </member>
        <member name="E:RGB.NET.Core.UpdateTrigger.Update">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.UpdateTrigger.TriggerHasData">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.ExceptionEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Exception" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ExceptionEventArgs.Exception">
            <summary>
            Gets the <see cref="T:System.Exception"/> which is responsible for the event-call.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ExceptionEventArgs.#ctor(System.Exception)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.ExceptionEventArgs" /> class.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> which is responsible for the event-call.</param>
        </member>
        <member name="T:RGB.NET.Core.SurfaceLayoutChangedEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.Devices">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.IRGBDevice"/> that caused the change. Returns null if the change isn't caused by a <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.DeviceAdded">
            <summary>
            Gets a value indicating if the event is caused by the addition of a new <see cref="T:RGB.NET.Core.IRGBDevice"/> to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.SurfaceLayoutChangedEventArgs.DeviceLocationChanged">
            <summary>
            Gets a value indicating if the event is caused by a changed location of one of the devices on the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.SurfaceLayoutChangedEventArgs.#ctor(System.Collections.Generic.IEnumerable{RGB.NET.Core.IRGBDevice},System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.SurfaceLayoutChangedEventArgs" /> class.
            </summary>
            <param name="devices">The <see cref="T:RGB.NET.Core.IRGBDevice" /> that caused the change.</param>
            <param name="deviceAdded">A value indicating if the event is caused by the addition of a new <see cref="T:RGB.NET.Core.IRGBDevice" /> to the <see cref="T:RGB.NET.Core.RGBSurface" />.</param>
            <param name="deviceLocationChanged">A value indicating if the event is caused by a changed location of one of the devices on the <see cref="T:RGB.NET.Core.RGBSurface" />.</param>
        </member>
        <member name="T:RGB.NET.Core.UpdatedEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Updated" />-event.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.UpdatingEventArgs">
            <inheritdoc />
            <summary>
            Represents the information supplied with an <see cref="E:RGB.NET.Core.RGBSurface.Updating" />-event.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.UpdatingEventArgs.DeltaTime">
            <summary>
            Gets the elapsed time (in seconds) since the last update.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.UpdatingEventArgs.#ctor(System.Double)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.UpdatingEventArgs" /> class.
            </summary>
            <param name="deltaTime">The elapsed time (in seconds) since the last update.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBDeviceException">
            <inheritdoc />
            <summary>
            Represents an exception thrown by an <see cref="T:RGB.NET.Core.IRGBDevice" />.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBDeviceException.#ctor(System.String,System.Exception)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RGBDeviceException" /> class.
            </summary>
            <param name="message">The message which describes the reason of throwing this exception.</param>
            <param name="innerException">Optional inner exception, which lead to this exception.</param>
        </member>
        <member name="T:RGB.NET.Core.DoubleExtensions">
            <summary>
            Offers some extensions and helper-methods for the work with doubles
            </summary>
        </member>
        <member name="F:RGB.NET.Core.DoubleExtensions.TOLERANCE">
            <summary>
            Defines the precision RGB.NET processes floating point comparisons in.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.DoubleExtensions.EqualsInTolerance(System.Double,System.Double)">
            <summary>
            Checks if two values are equal respecting the <see cref="F:RGB.NET.Core.DoubleExtensions.TOLERANCE"/>.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The first value to compare.</param>
            <returns><c>true</c> if the difference is smaller than the <see cref="F:RGB.NET.Core.DoubleExtensions.TOLERANCE"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.DoubleExtensions.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the provided value to be bigger or equal min and smaller or equal max.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The lower value of the range the value is clamped to.</param>
            <param name="max">The higher value of the range the value is clamped to.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RGB.NET.Core.DoubleExtensions.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Clamps the provided value to be bigger or equal min and smaller or equal max.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The lower value of the range the value is clamped to.</param>
            <param name="max">The higher value of the range the value is clamped to.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RGB.NET.Core.DoubleExtensions.Wrap(System.Double,System.Double,System.Double)">
            <summary>
            Enforces the provided value to be in the specified range by wrapping it around the edges if it exceeds them.
            </summary>
            <param name="value">The value to wrap.</param>
            <param name="min">The lower value of the range the value is wrapped into.</param>
            <param name="max">The higher value of the range the value is wrapped into.</param>
            <returns>The wrapped value.</returns>
        </member>
        <member name="T:RGB.NET.Core.AbstractLedGroup">
            <inheritdoc cref="T:RGB.NET.Core.AbstractDecoratable`1" />
            <inheritdoc cref="T:RGB.NET.Core.ILedGroup" />
            <summary>
            Represents a generic <see cref="T:RGB.NET.Core.AbstractLedGroup" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.AbstractLedGroup.Brush">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Core.AbstractLedGroup.ZIndex">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.AbstractLedGroup"/> class.
            </summary>
            <param name="autoAttach">Specifies whether this <see cref="T:RGB.NET.Core.AbstractLedGroup"/> should be automatically attached or not.</param>
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.GetLeds">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.OnAttach">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.AbstractLedGroup.OnDetach">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Core.ILedGroup">
            <inheritdoc />
            <summary>
            Represents a generic ledgroup.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.Brush">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.IBrush"/> which should be drawn over this <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.ILedGroup.ZIndex">
            <summary>
            Gets or sets the z-index of this <see cref="T:RGB.NET.Core.ILedGroup"/> to allow ordering them before drawing. (lowest first) (default: 0)
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.GetLeds">
            <summary>
            Gets a list containing all <see cref="T:RGB.NET.Core.Led"/> of this <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
            <returns>The list containing all <see cref="T:RGB.NET.Core.Led"/> of this <see cref="T:RGB.NET.Core.ILedGroup"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.OnAttach">
            <summary>
            Called when the <see cref="T:RGB.NET.Core.ILedGroup"/> is attached to the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ILedGroup.OnDetach">
            <summary>
            Called when the <see cref="T:RGB.NET.Core.ILedGroup"/> is detached from the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.ConversionHelper">
            <summary>
            Contains helper methods for converting things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.ConversionHelper.ToHex(System.Byte[])">
            <summary>
            Converts an array of bytes to a HEX-representation.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <returns>The HEX-representation of the provided bytes.</returns>
        </member>
        <member name="T:RGB.NET.Core.CultureHelper">
            <summary>
            Offers some helper-methods for culture related things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.CultureHelper.GetCurrentCulture">
            <summary>
            Gets the current keyboard-layout from the OS.
            </summary>
            <returns>The current keyboard-layout</returns>
        </member>
        <member name="T:RGB.NET.Core.PathHelper">
            <summary>
            Offers some helper-methods for file-path related things.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.PathHelper.GetAbsolutePath(System.String)">
            <summary>
            Returns an absolute path created from an relative path relatvie to the location of the executung assembly.
            </summary>
            <param name="relativePath">The relative path to convert.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="T:RGB.NET.Core.Color">
            <inheritdoc />
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Transparent">
            <summary>
            Gets an transparent color [A: 0, R: 0, G: 0, B: 0]
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.A">
            <summary>
            Gets the alpha component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.APercent">
            <summary>
            Gets the alpha component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.R">
            <summary>
            Gets the red component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.RPercent">
            <summary>
            Gets the red component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.G">
            <summary>
            Gets the green component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.GPercent">
            <summary>
            Gets the green component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.B">
            <summary>
            Gets the blue component value of this <see cref="T:RGB.NET.Core.Color"/> as byte in the range [0..255].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.BPercent">
            <summary>
            Gets the blue component value of this <see cref="T:RGB.NET.Core.Color"/> as percentage in the range [0..1].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Hue">
            <summary>
            Gets the hue component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> as degree in the range [0..360].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Saturation">
            <summary>
            Gets the saturation component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> as degree in the range [0..1].
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Color.Value">
            <summary>
            Gets the value component value (HSV-color space) of this <see cref="T:RGB.NET.Core.Color"/> as degree in the range [0..1].
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using RGB-Values. 
            Alpha defaults to 255.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using RGB-Values. 
            Alpha defaults to 255.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using RGB-percent values.
            </summary>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color"/> struct using ARGB-percent values.
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="r">The red component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="g">The green component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="b">The blue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.#ctor(RGB.NET.Core.Color)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct by cloning a existing <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color" /> the values are copied from.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.FromHSV(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using HSV-Values. 
            </summary>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.FromHSV(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:RGB.NET.Core.Color" /> struct using AHSV-Values. 
            </summary>
            <param name="a">The alpha component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="hue">The hue component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="saturation">The saturation component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <param name="value">The value component value of this <see cref="T:RGB.NET.Core.Color"/>.</param>
            <returns>The color created from the values.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.ToString">
            <summary>
            Converts the individual byte values of this <see cref="T:RGB.NET.Core.Color"/> to a human-readable string.
            </summary>
            <returns>A string that contains the individual byte values of this <see cref="T:RGB.NET.Core.Color"/>. For example "[A: 255, R: 255, G: 0, B: 0]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Color" /> and is equivalent to this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Color" /> equivalent to this <see cref="T:RGB.NET.Core.Color" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Color" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AsRGBHexString">
            <summary>
            Gets the current color as a RGB-HEX-string.
            </summary>
            <returns>The RGB-HEX-string.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AsARGBHexString">
            <summary>
            Gets the current color as a ARGB-HEX-string.
            </summary>
            <returns>The ARGB-HEX-string.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Deconstructs the Color into it's components.
            </summary>
            <param name="a">The alpha component of this color.</param>
            <param name="r">The red component of this color.</param>
            <param name="g">The green component of this color.</param>
            <param name="b">The blue component of this color.</param>
            <param name="hue">The hue component of this color.</param>
            <param name="saturation">The saturation component of this color.</param>
            <param name="value">The value component of this color.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Deconstructs the Color into it's ARGB-components.
            </summary>
            <param name="a">The alpha component of this color.</param>
            <param name="r">The red component of this color.</param>
            <param name="g">The green component of this color.</param>
            <param name="b">The blue component of this color.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.Deconstruct(System.Double@,System.Double@,System.Double@)">
            <summary>
            Deconstructs the Color into it's HSV-components.
            </summary>
            <param name="hue">The hue component of this color.</param>
            <param name="saturation">The saturation component of this color.</param>
            <param name="value">The value component of this color.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.Blend(RGB.NET.Core.Color)">
            <summary>
            Blends a <see cref="T:RGB.NET.Core.Color"/> over this color.
            </summary>
            <param name="color">The <see cref="T:RGB.NET.Core.Color"/> to blend.</param>
        </member>
        <member name="M:RGB.NET.Core.Color.AddRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the given RGB values to this color.
            </summary>
            <param name="r">The red value to add.</param>
            <param name="g">The green value to add.</param>
            <param name="b">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddRGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds the given RGB values to this color.
            </summary>
            <param name="a">The alpha value to add.</param>
            <param name="r">The red value to add.</param>
            <param name="g">The green value to add.</param>
            <param name="b">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddPercent(System.Double,System.Double,System.Double)">
            <summary>
            Adds the given RGB-percent values to this color.
            </summary>
            <param name="rPercent">The red value to add.</param>
            <param name="gPercent">The green value to add.</param>
            <param name="bPercent">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddPercent(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds the given RGB-percent values to this color.
            </summary>
            <param name="aPercent">The alpha value to add.</param>
            <param name="rPercent">The red value to add.</param>
            <param name="gPercent">The green value to add.</param>
            <param name="bPercent">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddHSV(System.Double,System.Double,System.Double)">
            <summary>
            Adds the given HSV values to this color.
            </summary>
            <param name="hue">The hue value to add.</param>
            <param name="saturation">The saturation value to add.</param>
            <param name="value">The value value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddHSV(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Adds the given HSV values to this color.
            </summary>
            <param name="a">The alpha value to add.</param>
            <param name="hue">The hue value to add.</param>
            <param name="saturation">The saturation value to add.</param>
            <param name="value">The value value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddA(System.Int32)">
            <summary>
            Adds the given alpha value to this color.
            </summary>
            <param name="a">The alpha value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddAPercent(System.Double)">
            <summary>
            Adds the given alpha-percent value to this color.
            </summary>
            <param name="aPercent">The alpha value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddR(System.Int32)">
            <summary>
            Adds the given red value to this color.
            </summary>
            <param name="r">The red value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddRPercent(System.Double)">
            <summary>
            Adds the given red-percent value to this color.
            </summary>
            <param name="rPercent">The red value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddG(System.Int32)">
            <summary>
            Adds the given green value to this color.
            </summary>
            <param name="g">The green value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddGPercent(System.Double)">
            <summary>
            Adds the given green-percent value to this color.
            </summary>
            <param name="gPercent">The green value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddB(System.Int32)">
            <summary>
            Adds the given blue value to this color.
            </summary>
            <param name="b">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddBPercent(System.Double)">
            <summary>
            Adds the given blue-percent value to this color.
            </summary>
            <param name="bPercent">The blue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddHue(System.Double)">
            <summary>
            Adds the given hue value to this color.
            </summary>
            <param name="hue">The hue value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddSaturation(System.Double)">
            <summary>
            Adds the given saturation value to this color.
            </summary>
            <param name="saturation">The saturation value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.AddValue(System.Double)">
            <summary>
            Adds the given value value to this color.
            </summary>
            <param name="value">The value value to add.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Subtracts the given RGB values to this color.
            </summary>
            <param name="r">The red value to subtract.</param>
            <param name="g">The green value to subtract.</param>
            <param name="b">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractRGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Subtracts the given RGB values to this color.
            </summary>
            <param name="a">The alpha value to subtract.</param>
            <param name="r">The red value to subtract.</param>
            <param name="g">The green value to subtract.</param>
            <param name="b">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractPercent(System.Double,System.Double,System.Double)">
            <summary>
            Subtracts the given RGB-percent values to this color.
            </summary>
            <param name="rPercent">The red value to subtract.</param>
            <param name="gPercent">The green value to subtract.</param>
            <param name="bPercent">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractPercent(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Subtracts the given RGB-percent values to this color.
            </summary>
            <param name="aPercent">The alpha value to subtract.</param>
            <param name="rPercent">The red value to subtract.</param>
            <param name="gPercent">The green value to subtract.</param>
            <param name="bPercent">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractHSV(System.Double,System.Double,System.Double)">
            <summary>
            Subtracts the given HSV values to this color.
            </summary>
            <param name="hue">The hue value to subtract.</param>
            <param name="saturation">The saturation value to subtract.</param>
            <param name="value">The value value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractHSV(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Subtracts the given HSV values to this color.
            </summary>
            <param name="a">The alpha value to subtract.</param>
            <param name="hue">The hue value to subtract.</param>
            <param name="saturation">The saturation value to subtract.</param>
            <param name="value">The value value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractA(System.Int32)">
            <summary>
            Subtracts the given alpha value to this color.
            </summary>
            <param name="a">The alpha value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractAPercent(System.Double)">
            <summary>
            Subtracts the given alpha-percent value to this color.
            </summary>
            <param name="aPercent">The alpha value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractR(System.Int32)">
            <summary>
            Subtracts the given red value to this color.
            </summary>
            <param name="r">The red value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractRPercent(System.Double)">
            <summary>
            Subtracts the given red-percent value to this color.
            </summary>
            <param name="rPercent">The red value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractG(System.Int32)">
            <summary>
            Subtracts the given green value to this color.
            </summary>
            <param name="g">The green value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractGPercent(System.Double)">
            <summary>
            Subtracts the given green-percent value to this color.
            </summary>
            <param name="gPercent">The green value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractB(System.Int32)">
            <summary>
            Subtracts the given blue value to this color.
            </summary>
            <param name="b">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractBPercent(System.Double)">
            <summary>
            Subtracts the given blue-percent value to this color.
            </summary>
            <param name="bPercent">The blue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractHue(System.Double)">
            <summary>
            Subtracts the given hue value to this color.
            </summary>
            <param name="hue">The hue value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractSaturation(System.Double)">
            <summary>
            Subtracts the given saturation value to this color.
            </summary>
            <param name="saturation">The saturation value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SubtractValue(System.Double)">
            <summary>
            Subtracts the given value value to this color.
            </summary>
            <param name="value">The value value to subtract.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyRGB(System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given RGB values to this color.
            </summary>
            <param name="r">The red value to multiply.</param>
            <param name="g">The green value to multiply.</param>
            <param name="b">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyRGB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given RGB values to this color.
            </summary>
            <param name="a">The alpha value to multiply.</param>
            <param name="r">The red value to multiply.</param>
            <param name="g">The green value to multiply.</param>
            <param name="b">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyPercent(System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given RGB-percent values to this color.
            </summary>
            <param name="rPercent">The red value to multiply.</param>
            <param name="gPercent">The green value to multiply.</param>
            <param name="bPercent">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyPercent(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given RGB-percent values to this color.
            </summary>
            <param name="aPercent">The alpha value to multiply.</param>
            <param name="rPercent">The red value to multiply.</param>
            <param name="gPercent">The green value to multiply.</param>
            <param name="bPercent">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyHSV(System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given HSV values to this color.
            </summary>
            <param name="hue">The hue value to multiply.</param>
            <param name="saturation">The saturation value to multiply.</param>
            <param name="value">The value value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyHSV(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Multiplies the given HSV values to this color.
            </summary>
            <param name="a">The alpha value to multiply.</param>
            <param name="hue">The hue value to multiply.</param>
            <param name="saturation">The saturation value to multiply.</param>
            <param name="value">The value value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyA(System.Double)">
            <summary>
            Multiplies the given alpha value to this color.
            </summary>
            <param name="a">The alpha value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyAPercent(System.Double)">
            <summary>
            Multiplies the given alpha-percent value to this color.
            </summary>
            <param name="aPercent">The alpha value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyR(System.Double)">
            <summary>
            Multiplies the given red value to this color.
            </summary>
            <param name="r">The red value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyRPercent(System.Double)">
            <summary>
            Multiplies the given red-percent value to this color.
            </summary>
            <param name="rPercent">The red value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyG(System.Double)">
            <summary>
            Multiplies the given green value to this color.
            </summary>
            <param name="g">The green value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyGPercent(System.Double)">
            <summary>
            Multiplies the given green-percent value to this color.
            </summary>
            <param name="gPercent">The green value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyB(System.Double)">
            <summary>
            Multiplies the given blue value to this color.
            </summary>
            <param name="b">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyBPercent(System.Double)">
            <summary>
            Multiplies the given blue-percent value to this color.
            </summary>
            <param name="bPercent">The blue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyHue(System.Double)">
            <summary>
            Multiplies the given hue value to this color.
            </summary>
            <param name="hue">The hue value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplySaturation(System.Double)">
            <summary>
            Multiplies the given saturation value to this color.
            </summary>
            <param name="saturation">The saturation value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.MultiplyValue(System.Double)">
            <summary>
            Multiplies the given value value to this color.
            </summary>
            <param name="value">The value value to multiply.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideRGB(System.Double,System.Double,System.Double)">
            <summary>
            Divides the given RGB values to this color.
            </summary>
            <param name="r">The red value to divide.</param>
            <param name="g">The green value to divide.</param>
            <param name="b">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideRGB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Divides the given RGB values to this color.
            </summary>
            <param name="a">The alpha value to divide.</param>
            <param name="r">The red value to divide.</param>
            <param name="g">The green value to divide.</param>
            <param name="b">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DividePercent(System.Double,System.Double,System.Double)">
            <summary>
            Divides the given RGB-percent values to this color.
            </summary>
            <param name="rPercent">The red value to divide.</param>
            <param name="gPercent">The green value to divide.</param>
            <param name="bPercent">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DividePercent(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Divides the given RGB-percent values to this color.
            </summary>
            <param name="aPercent">The alpha value to divide.</param>
            <param name="rPercent">The red value to divide.</param>
            <param name="gPercent">The green value to divide.</param>
            <param name="bPercent">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideHSV(System.Double,System.Double,System.Double)">
            <summary>
            Divides the given HSV values to this color.
            </summary>
            <param name="hue">The hue value to divide.</param>
            <param name="saturation">The saturation value to divide.</param>
            <param name="value">The value value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideHSV(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Divides the given HSV values to this color.
            </summary>
            <param name="a">The alpha value to divide.</param>
            <param name="hue">The hue value to divide.</param>
            <param name="saturation">The saturation value to divide.</param>
            <param name="value">The value value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideA(System.Double)">
            <summary>
            Divides the given alpha value to this color.
            </summary>
            <param name="a">The alpha value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideAPercent(System.Double)">
            <summary>
            Divides the given alpha-percent value to this color.
            </summary>
            <param name="aPercent">The alpha value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideRValue(System.Double)">
            <summary>
            Divides the given red value to this color.
            </summary>
            <param name="r">The red value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideRPercent(System.Double)">
            <summary>
            Divides the given red-percent value to this color.
            </summary>
            <param name="rPercent">The red value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideGValue(System.Double)">
            <summary>
            Divides the given green value to this color.
            </summary>
            <param name="g">The green value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideGPercent(System.Double)">
            <summary>
            Divides the given green-percent value to this color.
            </summary>
            <param name="gPercent">The green value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideBValue(System.Double)">
            <summary>
            Divides the given blue value to this color.
            </summary>
            <param name="b">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideBPercent(System.Double)">
            <summary>
            Divides the given blue-percent value to this color.
            </summary>
            <param name="bPercent">The blue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideHue(System.Double)">
            <summary>
            Divides the given hue value to this color.
            </summary>
            <param name="hue">The hue value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideSaturation(System.Double)">
            <summary>
            Divides the given saturation value to this color.
            </summary>
            <param name="saturation">The saturation value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.DivideValue(System.Double)">
            <summary>
            Divides the given value value to this color.
            </summary>
            <param name="value">The value value to divide.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetA(System.Int32)">
            <summary>
            Sets the given alpha value of this color.
            </summary>
            <param name="a">The alpha value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetAPercent(System.Double)">
            <summary>
            Sets the given alpha-percent value of this color.
            </summary>
            <param name="aPercent">The alpha value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetR(System.Int32)">
            <summary>
            Sets the given red value of this color.
            </summary>
            <param name="r">The red value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetRPercent(System.Double)">
            <summary>
            Sets the given red-percent value of this color.
            </summary>
            <param name="rPercent">The red value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetG(System.Int32)">
            <summary>
            Sets the given green value of this color.
            </summary>
            <param name="g">The green value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetGPercent(System.Double)">
            <summary>
            Sets the given green-percent value of this color.
            </summary>
            <param name="gPercent">The green value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetB(System.Int32)">
            <summary>
            Sets the given blue value of this color.
            </summary>
            <param name="b">The blue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetBPercent(System.Double)">
            <summary>
            Sets the given blue-percent value of this color.
            </summary>
            <param name="bPercent">The blue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetHue(System.Double)">
            <summary>
            Sets the given hue value of this color.
            </summary>
            <param name="hue">The hue value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetSaturation(System.Double)">
            <summary>
            Sets the given saturation value of this color.
            </summary>
            <param name="saturation">The saturation value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.SetValue(System.Double)">
            <summary>
            Sets the given value value of this color.
            </summary>
            <param name="value">The value value to set.</param>
            <returns>The new color after the modification.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Addition(RGB.NET.Core.Color,RGB.NET.Core.Color)">
            <summary>
            Blends the provided colors as if <see cref="M:RGB.NET.Core.Color.Blend(RGB.NET.Core.Color)"/> would've been called on <paramref name="color1" />.
            </summary>
            <param name="color1">The base color.</param>
            <param name="color2">The color to blend.</param>
            <returns>The blended color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Equality(RGB.NET.Core.Color,RGB.NET.Core.Color)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Color" /> are equal.
            </summary>
            <param name="color1">The first <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <param name="color2">The second <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <returns><c>true</c> if <paramref name="color1" /> and <paramref name="color2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Inequality(RGB.NET.Core.Color,RGB.NET.Core.Color)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Color" /> are equal.
            </summary>
            <param name="color1">The first <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <param name="color2">The second <see cref="T:RGB.NET.Core.Color" /> to compare.</param>
            <returns><c>true</c> if <paramref name="color1" /> and <paramref name="color2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of ARGB-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:RGB.NET.Core.Color.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:System.ValueTuple"/> of HSV-components to a <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
            <param name="components">The <see cref="T:System.ValueTuple"/> containing the components.</param>
            <returns>The color.</returns>
        </member>
        <member name="T:RGB.NET.Core.Led">
            <inheritdoc />
            <summary>
            Represents a single LED of a RGB-device.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Device">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.IRGBDevice"/> this <see cref="T:RGB.NET.Core.Led"/> is associated with.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Id">
            <summary>
            Gets the <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led" />.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Shape">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.Shape"/> of the <see cref="T:RGB.NET.Core.Led"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.ShapeData">
            <summary>
            Gets or sets the data used for by the <see cref="F:RGB.NET.Core.Shape.Custom"/>-<see cref="T:RGB.NET.Core.Shape"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.LedRectangle">
            <summary>
            Gets a rectangle representing the physical location of the <see cref="T:RGB.NET.Core.Led"/> relative to the <see cref="P:RGB.NET.Core.Led.Device"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.AbsoluteLedRectangle">
            <summary>
            Gets a rectangle representing the physical location of the <see cref="T:RGB.NET.Core.Led"/> on the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.IsDirty">
            <summary>
            Indicates whether the <see cref="T:RGB.NET.Core.Led" /> is about to change it's color.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.RequestedColor">
            <summary>
            Gets a copy of the <see cref="T:RGB.NET.Core.Color"/> the LED should be set to on the next update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Color">
            <summary>
            Gets the current <see cref="T:RGB.NET.Core.Color"/> of the <see cref="T:RGB.NET.Core.Led"/>. Sets the <see cref="P:RGB.NET.Core.Led.RequestedColor" /> for the next update.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.IsLocked">
            <summary>
            Gets or sets if the color of this LED can be changed.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.Image">
            <summary>
            Gets the URI of an image of the <see cref="T:RGB.NET.Core.Led"/> or null if there is no image.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Led.CustomData">
            <summary>
            Gets the provider-specific data associated with this led.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Led.#ctor(RGB.NET.Core.IRGBDevice,RGB.NET.Core.LedId,RGB.NET.Core.Rectangle,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Led"/> class.
            </summary>
            <param name="device">The <see cref="T:RGB.NET.Core.IRGBDevice"/> the <see cref="T:RGB.NET.Core.Led"/> is associated with.</param>
            <param name="id">The <see cref="T:RGB.NET.Core.LedId"/> of the <see cref="T:RGB.NET.Core.Led"/>.</param>
            <param name="ledRectangle">The <see cref="T:RGB.NET.Core.Rectangle"/> representing the physical location of the <see cref="T:RGB.NET.Core.Led"/> relative to the <see cref="P:RGB.NET.Core.Led.Device"/>.</param>
            <param name="customData">The provider-specific data associated with this led.</param>
        </member>
        <member name="M:RGB.NET.Core.Led.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Led.Id"/> and the <see cref="P:RGB.NET.Core.Led.Color"/> of this <see cref="T:RGB.NET.Core.Led"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Led.Id"/> and the <see cref="P:RGB.NET.Core.Led.Color"/> of this <see cref="T:RGB.NET.Core.Led"/>. For example "Enter [A: 255, R: 255, G: 0, B: 0]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Led.Update">
            <summary>
            Updates the <see cref="P:RGB.NET.Core.Led.LedRectangle"/> to the requested <see cref="T:RGB.NET.Core.Color"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Led.Reset">
            <summary>
            Resets the <see cref="P:RGB.NET.Core.Led.LedRectangle"/> back to default.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Led.op_Implicit(RGB.NET.Core.Led)~RGB.NET.Core.Color">
            <summary>
            Converts a <see cref="T:RGB.NET.Core.Led" /> to a <see cref="T:RGB.NET.Core.Color" />.
            </summary>
            <param name="led">The <see cref="T:RGB.NET.Core.Led"/> to convert.</param>
        </member>
        <member name="M:RGB.NET.Core.Led.op_Implicit(RGB.NET.Core.Led)~RGB.NET.Core.Rectangle">
            <summary>
            Converts a <see cref="T:RGB.NET.Core.Led" /> to a <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <param name="led">The <see cref="T:RGB.NET.Core.Led"/> to convert.</param>
        </member>
        <member name="T:RGB.NET.Core.AbstractBindable">
            <inheritdoc />
            <summary>
            Represents a basic bindable class which notifies when a property value changes.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.AbstractBindable.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.RequiresUpdate``1(``0@,``0)">
            <summary>
            Checks if the property already matches the desirec value or needs to be updated.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="storage">Reference to the backing-filed.</param>
            <param name="value">Value to apply.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Checks if the property already matches the desired value and updates it if not.
            </summary>
            <typeparam name="T">Type of the property.</typeparam>
            <param name="storage">Reference to the backing-filed.</param>
            <param name="value">Value to apply.</param>
            <param name="propertyName">Name of the property used to notify listeners. This value is optional 
            and can be provided automatically when invoked from compilers that support <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
            <returns><c>true</c> if the value was changed, <c>false</c> if the existing value matched the desired value.</returns>
        </member>
        <member name="M:RGB.NET.Core.AbstractBindable.OnPropertyChanged(System.String)">
            <summary>
            Triggers the <see cref="E:RGB.NET.Core.AbstractBindable.PropertyChanged"/>-event when a a property value has changed.
            </summary>
            <param name="propertyName">Name of the property used to notify listeners. This value is optional 
            and can be provided automatically when invoked from compilers that support <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
        </member>
        <member name="T:RGB.NET.Core.IBindable">
            <summary>
            Represents a basic bindable class which notifies when a property value changes.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Point">
            <summary>
            Represents a point consisting of a X- and a Y-position.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.Invalid">
            <summary>
            Gets a [NaN,NaN]-Point.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.X">
            <summary>
            Gets the X-position of this <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Point.Y">
            <summary>
            Gets the Y-position of this <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Point"/> class using the provided values.
            </summary>
            <param name="x">The value used for the X-position.</param>
            <param name="y">The value used for the Y-position.</param>
        </member>
        <member name="M:RGB.NET.Core.Point.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Point.X"/>- and <see cref="P:RGB.NET.Core.Point.Y"/>-position of this <see cref="T:RGB.NET.Core.Point"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Point.X"/> and <see cref="P:RGB.NET.Core.Point.Y"/>  of this <see cref="T:RGB.NET.Core.Point"/>. For example "[X: 100, Y: 20]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Point" /> and is equivalent to this <see cref="T:RGB.NET.Core.Point" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Point" /> equivalent to this <see cref="T:RGB.NET.Core.Point" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Point" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Point" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Equality(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Point" /> are equal.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <returns><c>true</c> if <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Inequality(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Point" /> are equal.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point" /> to compare.</param>
            <returns><c>true</c> if <paramref name="point1" /> and <paramref name="point2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Addition(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Addition(RGB.NET.Core.Point,RGB.NET.Core.Size)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rectangle"/> created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> of the rectangle.</param>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/> of the rectangle.</param>
            <returns>The rectangle created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Subtraction(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Multiply(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Point.op_Division(RGB.NET.Core.Point,RGB.NET.Core.Point)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Point"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Point"/>.
            </summary>
            <param name="point1">The first <see cref="T:RGB.NET.Core.Point"/>.</param>
            <param name="point2">The second <see cref="T:RGB.NET.Core.Point"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Point"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Point"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.Rectangle">
            <inheritdoc />
            <summary>
            Represents a rectangle defined by it's position and it's size.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.X">
            <summary>
            Gets or sets the X-position of this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Y">
            <summary>
            Gets or sets the Y-position of this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Width">
            <summary>
            Gets or sets the width of this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Height">
            <summary>
            Gets or sets the height of this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Location">
            <summary>
            Gets or sets the <see cref="T:RGB.NET.Core.Point"/> representing the top-left corner of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Size">
            <summary>
            Gets or sets the <see cref="P:RGB.NET.Core.Rectangle.Size"/> of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.Center">
            <summary>
            Gets a new <see cref="T:RGB.NET.Core.Point"/> representing the center-point of the <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Rectangle.IsEmpty">
            <summary>
            Gets a bool indicating if both, the width and the height of the rectangle is greater than zero.
            <c>True</c> if the rectangle has a width or a height of zero; otherwise, <c>false</c>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the provided values for <see cref="P:RGB.NET.Core.Rectangle.Location" /> ans <see cref="P:RGB.NET.Core.Rectangle.Size" />.
            </summary>
            <param name="x">The <see cref="P:RGB.NET.Core.Point.X" />-position of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="y">The <see cref="P:RGB.NET.Core.Point.Y" />-position of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="width">The <see cref="P:RGB.NET.Core.Size.Width" /> of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
            <param name="height">The <see cref="P:RGB.NET.Core.Size.Height" /> of this <see cref="T:RGB.NET.Core.Rectangle" />.</param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Point,RGB.NET.Core.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle"/> class using the given <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="location"></param>
            <param name="size"></param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Rectangle[])">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the given array of <see cref="T:RGB.NET.Core.Rectangle" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to completely contain all rectangles provided as parameters.
            </summary>
            <param name="rectangles">The array of <see cref="T:RGB.NET.Core.Rectangle" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /></param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Collections.Generic.IEnumerable{RGB.NET.Core.Rectangle})">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle"/> class using the given list of <see cref="T:RGB.NET.Core.Rectangle"/>.
            The <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/> is calculated to completely contain all rectangles provided as parameters.
            </summary>
            <param name="rectangles">The list of <see cref="T:RGB.NET.Core.Rectangle"/> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/></param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(RGB.NET.Core.Point[])">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the given array of <see cref="T:RGB.NET.Core.Point" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to contain all points provided as parameters.
            </summary>
            <param name="points">The array of <see cref="T:RGB.NET.Core.Point" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /></param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.#ctor(System.Collections.Generic.IEnumerable{RGB.NET.Core.Point})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Rectangle" /> class using the given list of <see cref="T:RGB.NET.Core.Point" />.
            The <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /> is calculated to contain all points provided as parameters.
            </summary>
            <param name="points">The list of <see cref="T:RGB.NET.Core.Point" /> used to calculate the <see cref="P:RGB.NET.Core.Rectangle.Location" /> and <see cref="P:RGB.NET.Core.Rectangle.Size" /></param>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.CalculateIntersectPercentage(RGB.NET.Core.Rectangle)">
            <summary>
            Calculates the percentage of intersection of a rectangle.
            </summary>
            <param name="intersectingRect">The intersecting rectangle.</param>
            <returns>The percentage of intersection.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.CalculateIntersection(RGB.NET.Core.Rectangle)">
            <summary>
            Calculates the <see cref="T:RGB.NET.Core.Rectangle"/> representing the intersection of this <see cref="T:RGB.NET.Core.Rectangle"/> and the one provided as parameter.
            </summary>
            <param name="intersectingRectangle">The intersecting <see cref="T:RGB.NET.Core.Rectangle"/></param>
            <returns>A new <see cref="T:RGB.NET.Core.Rectangle"/> representing the intersection this <see cref="T:RGB.NET.Core.Rectangle"/> and the one provided as parameter.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Contains(RGB.NET.Core.Point)">
            <summary>
            Determines if the specified <see cref="T:RGB.NET.Core.Point"/> is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> to test.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Contains(System.Double,System.Double)">
            <summary>
            Determines if the specified location is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="x">The X-location to test.</param>
            <param name="y">The Y-location to test.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Contains(RGB.NET.Core.Rectangle)">
            <summary>
            Determines if the specified <see cref="T:RGB.NET.Core.Rectangle"/> is contained within this <see cref="T:RGB.NET.Core.Rectangle"/>.
            </summary>
            <param name="rect">The <see cref="T:RGB.NET.Core.Rectangle"/> to test.</param>
            <returns></returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Rectangle.Location"/>- and <see cref="P:RGB.NET.Core.Rectangle.Size"/>-position of this <see cref="T:RGB.NET.Core.Rectangle"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Rectangle.Location"/> and <see cref="P:RGB.NET.Core.Rectangle.Size"/>  of this <see cref="T:RGB.NET.Core.Rectangle"/>. For example "[Location: [X: 100, Y: 10], Size: [Width: 20, Height: [40]]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Rectangle" /> and is equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Rectangle" /> equivalent to this <see cref="T:RGB.NET.Core.Rectangle" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Rectangle" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Rectangle" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.op_Equality(RGB.NET.Core.Rectangle,RGB.NET.Core.Rectangle)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rectangle" /> are equal.
            </summary>
            <param name="rectangle1">The first <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <param name="rectangle2">The second <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rectangle1" /> and <paramref name="rectangle2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Rectangle.op_Inequality(RGB.NET.Core.Rectangle,RGB.NET.Core.Rectangle)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Rectangle" /> are equal.
            </summary>
            <param name="rectangle1">The first <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <param name="rectangle2">The second <see cref="T:RGB.NET.Core.Rectangle" /> to compare.</param>
            <returns><c>true</c> if <paramref name="rectangle1" /> and <paramref name="rectangle2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:RGB.NET.Core.Shape">
            <summary>
            Contains a list of different shapes used by <see cref="T:RGB.NET.Core.Layout.DeviceLayout"/>.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Custom">
            <summary>
            A custom shape defined by vector-data.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Rectangle">
            <summary>
            A simple rectangle.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.Shape.Circle">
            <summary>
            A simple circle.
            </summary>
        </member>
        <member name="T:RGB.NET.Core.Size">
            <summary>
            Represents a size consisting of a width and a height.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Invalid">
            <summary>
            Gets a [NaN,NaN]-Size.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Width">
            <summary>
            Gets or sets the width component value of this <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.Size.Height">
            <summary>
            Gets or sets the height component value of this <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.Size.#ctor(System.Double)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Size" /> using the provided size to define a square.
            </summary>
            <param name="size">The size used for the <see cref="P:RGB.NET.Core.Size.Width" /> component value and the <see cref="P:RGB.NET.Core.Size.Height" /> component value.</param>
        </member>
        <member name="M:RGB.NET.Core.Size.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.Size"/> class using the provided values.
            </summary>
            <param name="width">The size used for the <see cref="P:RGB.NET.Core.Size.Width"/> component value.</param>
            <param name="height">The size used for the <see cref="P:RGB.NET.Core.Size.Height"/> component value.</param>
        </member>
        <member name="M:RGB.NET.Core.Size.ToString">
            <summary>
            Converts the <see cref="P:RGB.NET.Core.Size.Width"/> and <see cref="P:RGB.NET.Core.Size.Height"/> of this <see cref="T:RGB.NET.Core.Size"/> to a human-readable string.
            </summary>
            <returns>A string that contains the <see cref="P:RGB.NET.Core.Size.Width"/> and <see cref="P:RGB.NET.Core.Size.Height"/>  of this <see cref="T:RGB.NET.Core.Size"/>. For example "[Width: 100, Height: 20]".</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a <see cref="T:RGB.NET.Core.Size" /> and is equivalent to this <see cref="T:RGB.NET.Core.Size" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><c>true</c> if <paramref name="obj" /> is a <see cref="T:RGB.NET.Core.Size" /> equivalent to this <see cref="T:RGB.NET.Core.Size" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:RGB.NET.Core.Size" />.
            </summary>
            <returns>An integer value that specifies the hash code for this <see cref="T:RGB.NET.Core.Size" />.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Equality(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Size" /> are equal.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <returns><c>true</c> if <paramref name="size1" /> and <paramref name="size2" /> are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Inequality(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a value that indicates whether two specified <see cref="T:RGB.NET.Core.Size" /> are equal.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size" /> to compare.</param>
            <returns><c>true</c> if <paramref name="size1" /> and <paramref name="size2" /> are not equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Addition(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the addition of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Addition(RGB.NET.Core.Size,RGB.NET.Core.Point)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Rectangle"/> created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/> of the rectangle.</param>
            <param name="point">The <see cref="T:RGB.NET.Core.Point"/> of the rectangle.</param>
            <returns>The rectangle created from the provided <see cref="T:RGB.NET.Core.Point"/> and <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Subtraction(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the subtraction of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Multiply(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Multiply(RGB.NET.Core.Size,System.Double)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="factor">The factor by which the <see cref="T:RGB.NET.Core.Size"/> should be multiplied.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the multiplication of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Division(RGB.NET.Core.Size,RGB.NET.Core.Size)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Size"/>.
            </summary>
            <param name="size1">The first <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="size2">The second <see cref="T:RGB.NET.Core.Size"/>.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the division of the two provided <see cref="T:RGB.NET.Core.Size"/>.</returns>
        </member>
        <member name="M:RGB.NET.Core.Size.op_Division(RGB.NET.Core.Size,System.Double)">
            <summary>
            Returns a new <see cref="T:RGB.NET.Core.Size"/> representing the division of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.
            </summary>
            <param name="size">The <see cref="T:RGB.NET.Core.Size"/>.</param>
            <param name="factor">The factor by which the <see cref="T:RGB.NET.Core.Size"/> should be divided.</param>
            <returns>A new <see cref="T:RGB.NET.Core.Size"/> representing the division of the <see cref="T:RGB.NET.Core.Size"/> and the provided factor.</returns>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface">
            <inheritdoc cref="T:RGB.NET.Core.AbstractBindable" />
            <inheritdoc cref="T:System.IDisposable" />
            <summary>
            Represents a RGB-surface containing multiple devices.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Instance">
            <summary>
            Gets the singelot-instance of the <see cref="T:RGB.NET.Core.RGBSurface"/> class.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Devices">
            <summary>
            Gets a readonly list containing all loaded <see cref="T:RGB.NET.Core.IRGBDevice"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.SurfaceRectangle">
            <summary>
            Gets a copy of the <see cref="T:RGB.NET.Core.Rectangle"/> representing this <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.Leds">
            <summary>
            Gets a list of all <see cref="T:RGB.NET.Core.Led"/> on this <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Core.RGBSurface"/> class.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Update(System.Boolean)">
            <summary>
            Perform a full update for all devices. Updates only dirty <see cref="T:RGB.NET.Core.Led"/> by default, or all <see cref="T:RGB.NET.Core.Led"/>, if flushLeds is set to true.
            </summary>
            <param name="flushLeds">Specifies whether all <see cref="T:RGB.NET.Core.Led"/>, (including clean ones) should be updated.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Dispose">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.Render(RGB.NET.Core.ILedGroup)">
            <summary>
            Renders a ledgroup.
            </summary>
            <param name="ledGroup">The led group to render.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.AttachLedGroup(RGB.NET.Core.ILedGroup)">
            <summary>
            Attaches the given <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to attach.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be attached; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.DetachLedGroup(RGB.NET.Core.ILedGroup)">
            <summary>
            Detaches the given <see cref="T:RGB.NET.Core.ILedGroup"/>.
            </summary>
            <param name="ledGroup">The <see cref="T:RGB.NET.Core.ILedGroup"/> to detached.</param>
            <returns><c>true</c> if the <see cref="T:RGB.NET.Core.ILedGroup"/> could be detached; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.GetDevices``1">
            <summary>
            Gets all devices of a specific type.
            </summary>
            <typeparam name="T">The type of devices to get.</typeparam>
            <returns>A list of devices with the specified type.</returns>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.GetDevices(RGB.NET.Core.RGBDeviceType)">
            <summary>
            Gets all devices of the specified <see cref="T:RGB.NET.Core.RGBDeviceType"/>.
            </summary>
            <param name="deviceType">The <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the devices to get.</param>
            <returns>a list of devices matching the specified <see cref="T:RGB.NET.Core.RGBDeviceType"/>.</returns>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.ExceptionEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Exception"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.UpdatingEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Updating"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.UpdatedEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.Updated"/>-event.
            </summary>
            <param name="args">The arguments provided by the event.</param>
        </member>
        <member name="T:RGB.NET.Core.RGBSurface.SurfaceLayoutChangedEventHandler">
            <summary>
            Represents the event-handler of the <see cref="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged"/>-event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Exception">
            <summary>
            Occurs when a catched exception is thrown inside the <see cref="T:RGB.NET.Core.RGBSurface"/>.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Updating">
            <summary>
            Occurs when the <see cref="T:RGB.NET.Core.RGBSurface"/> starts updating.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.Updated">
            <summary>
            Occurs when the <see cref="T:RGB.NET.Core.RGBSurface"/> update is done.
            </summary>
        </member>
        <member name="E:RGB.NET.Core.RGBSurface.SurfaceLayoutChanged">
            <summary>
            Occurs when the layout of this <see cref="T:RGB.NET.Core.RGBSurface"/> changed.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnException(System.Exception)">
            <summary>
            Handles the needed event-calls for an exception.
            </summary>
            <param name="ex">The exception previously thrown.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnUpdating">
            <summary>
            Handles the needed event-calls before updating.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.OnUpdated">
            <summary>
            Handles the needed event-calls after an update.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.LoadDevices(RGB.NET.Core.IRGBDeviceProvider,RGB.NET.Core.RGBDeviceType,System.Boolean,System.Boolean)">
            <summary>
            Loads all devices the given <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/> is able to provide.
            </summary>
            <param name="deviceProvider">The <see cref="T:RGB.NET.Core.IRGBDeviceProvider"/> to load the devices from.</param>
            <param name="loadFilter">Specifies which types of devices to load.</param>
            <param name="exclusiveAccessIfPossible">Specifies whether the application should request exclusive access of possible or not.</param>
            <param name="throwExceptions">Specifies whether exception during the initialization sequence should be thrown or not.</param>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.AlignDevices">
            <summary>
            Automatically aligns all devices to prevent overlaps.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.UpdateFrequency">
            <summary>
            Gets or sets the update-frequency in seconds. (Calculate by using '1.0 / updates per second')
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.LastUpdateTime">
            <summary>
            Gets the time it took the last update-loop cycle to run.
            </summary>
        </member>
        <member name="P:RGB.NET.Core.RGBSurface.UpdateMode">
            <summary>
            Gets or sets the update-mode.
            </summary>
        </member>
        <member name="M:RGB.NET.Core.RGBSurface.CheckUpdateLoop">
            <summary>
            Checks if automatic updates should occur and starts/stops the update-loop if needed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the requested update-mode is not available.</exception>
        </member>
        <member name="T:RGB.NET.Core.UpdateMode">
            <summary>
            Contains list of available update modes.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.UpdateMode.Manual">
            <summary>
            The <see cref="T:RGB.NET.Core.RGBSurface"/> will not perform automatic updates. Updates will only occur if <see cref="M:RGB.NET.Core.RGBSurface.Update(System.Boolean)" /> is called.
            </summary>
        </member>
        <member name="F:RGB.NET.Core.UpdateMode.Continuous">
            <summary>
            The <see cref="T:RGB.NET.Core.RGBSurface"/> will perform automatic updates at the rate set in <see cref="P:RGB.NET.Core.RGBSurface.UpdateFrequency" />.
            </summary>
        </member>
    </members>
</doc>
